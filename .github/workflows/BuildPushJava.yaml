name: Code Build & Image Push (CICDv2)
permissions: write-all

on:
  workflow_call:
    inputs:
      project-id:
        default: 'gocariq-platform'
        type: string
      app-name:
        required: true
        type: string
      slack-channel:
        default: '#release'
        type: string
      deploy-env:
        required: true
        type: string
      registry-name:
        default: 'cariq'
        type: string
      image-tag:
        default: '0.1.0'
        type: string
      sonar:
        default: 'https://sonar.gocariq.com'
        type: string
    secrets:
      SLACK_WEBHOOK_URL:
        required: true
      SONAR_TOKEN:
        required: true
      GOOGLE_CRED:
        required: true
      REGISTRY_HOST_NAME:
        required: true
      GKE_SA_GHA_PUSHER_CREDENTIALS:
        required: true
      GHA_DEVOPS_DISPATCH:
        required: true
      K8S_POD_DEPLOY_VALIDATION:
        required: true
      GHA_DISPATCH_TEST:
        required: true
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:

      - name: Check if branch is main
        id: CheckBranch
        if: ${{ github.ref == 'refs/heads/main' }}
        shell: bash
        run: |
          echo "This branch is main. Action forbidden!"
          exit1

      - uses: act10ns/slack@v2.0.0
        with:
          status: starting
          channel: ${{ inputs.slack-channel }}
          webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}

      - uses: actions/checkout@v3

      - name: Image check
        id: check-image
        uses: gocariq-gitops/release-actions/checkDockerImage@reusable_workflows
        with:
          google_credentials: ${{secrets.GOOGLE_CRED}}
          google_project_id: ${{ inputs.project-id }}
          docker_repo_name:  ${{ inputs.registry-name }}
          docker_image_name: ${{ inputs.app-name }}

      - name: Dockerfile lint
        if: ${{ env.IMAGE_EXIST == 'false' }}
        id: validate-dockerfile
        shell: bash
        run: |
          docker run --rm -e HADOLINT_IGNORE=DL3007,DL3008,DL3018 -i hadolint/hadolint < Dockerfile

      - name: helm lint
        if: ${{ env.IMAGE_EXIST == 'false' }}
        id: validate-chart
        shell: bash
        run: |
          helm lint ./charts/${{ inputs.app-name }}/

      # - name: Set up JDK 11
      #   if: ${{ env.IMAGE_EXIST == 'false' }}
      #   id: setting-env
      #   uses: actions/setup-java@v2
      #   with:
      #     java-version: 11
      #     distribution: 'adopt'

      - uses: gocariq-gitops/release-actions/ciBuildMetadataFetcher@main
        if: ${{ env.IMAGE_EXIST == 'false' }}

      # - name: Code Build ${{ inputs.app-name }}
      #   if: ${{ env.IMAGE_EXIST == 'false' }}
      #   id: build-code
      #   shell: bash
      #   run: |
      #     set -x
      #     ./${{ env.BUILD_SCRIPT_PATH }}

      - name: SonarQube Scan
        id: sonar-scan
        if: ${{ env.IMAGE_EXIST == 'false' }}
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ inputs.sonar }}

      - name: Docker Build & Push ${{ inputs.app-name }}
        id: dockerize-push
        if: ${{ env.IMAGE_EXIST == 'false' }}
        uses: gocariq-gitops/release-actions/dockerBuildNPush@main
        with:
          google_credentials: ${{secrets.GOOGLE_CRED}}
          google_project_id: ${{ inputs.project-id }}
          docker_repo_name: ${{ inputs.registry-name }}
          docker_file_path: ${{ env.DOCKER_FILE_PATH }}
          docker_image_name: ${{ inputs.app-name }}
          docker_build_kit: '0'

      - name: helm package and push
        id: helm-package-push
        uses: gocariq-gitops/release-actions/k8sHelm@main
        with:
          google_credentials: ${{secrets.GOOGLE_CRED}}
          image_tag: ${{ inputs.image-tag }}
          registry_name: ${{ inputs.registry-name }}
          registry_host_name: ${{secrets.REGISTRY_HOST_NAME}}
          project_id: ${{ inputs.project-id }}
          gke_google_credentials: ${{ secrets.GKE_SA_GHA_PUSHER_CREDENTIALS }}
          chart_name: ${{ inputs.app-name }}

      - name: gitOps update helm tag in environment repo
        id: update-tag-version
        uses: gocariq-gitops/release-actions/helmValuesUpdateWithWait@main
        with:
          tag: ${{ env.SHORT_SHA }}
          authToken: ${{secrets.GHA_DEVOPS_DISPATCH}}
          appName: ${{ inputs.app-name }}
          deployEnv: ${{ inputs.deploy-env }}

      - name: Validate deployment
        id: validate-git-tag-deployment
        uses: gocariq-gitops/release-actions/bashValidateDeployment@main
        with:
          google_credentials: ${{ secrets.K8S_POD_DEPLOY_VALIDATION }}
          app_name: ${{ inputs.app-name }}
          google_project_id: ${{ inputs.project-id }}
          expected_git_tag: ${{ env.SHORT_SHA }}
          env_name: ${{ inputs.deploy-env }}
          max_attempt: 30
          sleep_time: 10

      # - name: Trigger Test Suites
      #   if: ${{ env.IMAGE_EXIST == 'false' }}
      #   id: smoke-test
      #   uses: gocariq-gitops/release-actions/fireWorkLoadAndFollow@main
      #   with:
      #     authToken: ${{secrets.GHA_DISPATCH_TEST}}
      #     targetEnv: ${{ inputs.deploy-env }}
      #     tag: ${{ env.SHORT_SHA }}
      #     workFlowFileName: core-service-test

      - uses: act10ns/slack@v2.0.0
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: ${{ inputs.slack-channel }}
          webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
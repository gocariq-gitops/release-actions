name: "Detect current application version"
description: "Detect current application version (git_tag or 0.0.1-git_sha)"

inputs:
  docker_image_tag:
    description: "Docker Image Tag, used for PR to main, when git sha is know and not the latest one"
    required: false
    default: ""
  version_null_prefix:
    default: "0.0.0-"
    description: "Null version prefix is used for not versioned builds with git sha, to make it SemVer 2 compatible and looks like 0.0.0-abcdef0"

runs:
  using: "composite"
  steps:
    - name: Helm - detect version
      id: helm-detect-version
      shell: bash
      run: |
        set -x
        
        if [[ -n "${{inputs.docker_image_tag}}" ]]; then
          GITHUB_SHA_NEW="${{inputs.docker_image_tag}}"
          IMAGE_SHA=${GITHUB_SHA_NEW:0:7}
        elif [[ -n "${{github.event.pull_request.head.sha}}" ]]; then
          # is set only for PRs
          GITHUB_SHA_NEW=${{github.event.pull_request.head.sha}}
          IMAGE_SHA=${GITHUB_SHA_NEW:0:7}
        else
          IMAGE_SHA=${GITHUB_SHA:0:7}
        fi
      
        # Normalize version to SEMVER 2
        SEMVER_VALIDATOR_REGEX="^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(-(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\+[0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*)?$"
        if [[ ! "${IMAGE_SHA}" =~ ${SEMVER_VALIDATOR_REGEX} ]]; then
          IMAGE_SHA="${{inputs.version_null_prefix}}${IMAGE_SHA}"
        fi
        
        # Export env variables
        echo "CURRENT_APP_VERSION=$IMAGE_SHA" >> $GITHUB_ENV

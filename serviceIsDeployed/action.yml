name: "Check if service is deployed"
description: "Check if service is already deployed"

inputs:
  google_credentials:
    description: "Google Credentials"
    required: true
  google_project_id:
    description: "Google Project Id"
    required: true
  app_name:
    description: "App name"
    required: true
  env_name:
    description: "Env name"
    required: true
  expected_git_tag:
    description: "Expected Git tag"
    required: true
  cluster_name:
    description: "Kubernetes cluster name"
    default: 'cariq-stage'
    required: false
  cluster_location:
    description: "Kubernetes cluster location"
    default: 'us-central1'
    required: false

runs:
  using: "composite"
  steps:
  
      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ inputs.google_credentials }}'
          
      - id: 'get-credentials'
        uses: 'google-github-actions/get-gke-credentials@v1'
        with:
          cluster_name: '${{ inputs.cluster_name }}'
          location: '${{ inputs.cluster_location }}'
          
      - name: "Check if service is deployed"
        shell: bash
        run: |
          set -x

          SERVICE_IS_DEPLOYED="false"
          
          OUT=$(kubectl get deployment ${{inputs.app_name}} --namespace ${{inputs.env_name}} -o=jsonpath='{.spec.template.spec.containers[0].image}')
          echo $OUT
          ACTUAL_GIT_TAG=${OUT##*:}

          if [[ "${{inputs.expected_git_tag}}" == "$ACTUAL_GIT_TAG" ]]; then
            SERVICE_IS_DEPLOYED="true"
          fi
          
          echo "SERVICE_IS_DEPLOYED=$SERVICE_IS_DEPLOYED" >> $GITHUB_ENV

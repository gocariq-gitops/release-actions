name: "Check Docker Image"
description: "Check if docker image exists"

inputs:
  google_project_id:
    description: "Google Project Id"
    required: true
  docker_image_name:
    description: "Docker Image Name"
    required: true
  docker_image_tag:
    description: "Docker Image Tag"
    required: false
    default: ""
  docker_registry_name:
    default: "carig"
    description: "Docker Registry Name"
    required: true
  registry_host:
    default: "us-docker.pkg.dev"
    description: "Docker registry path"

runs:
  using: "composite"
  steps:
    - name: Print inputs
      shell: bash
      run: |
        echo "docker_registry_name - ${{inputs.docker_registry_name}}"
        echo "docker_image_name - ${{inputs.docker_image_name}}"
        echo "google_project_id - ${{inputs.google_project_id}}"

    - name: Docker Auth with gCloud CLI
      shell: bash
      run: |
        gcloud auth configure-docker ${{ inputs.registry_host }}

    - name: check docker image
      shell: bash
      run: |
        export REPO_URL=${{ inputs.registry_host }}
        export PROJECT_ID=${{inputs.google_project_id}}
        export REPO_NAME=${{inputs.docker_registry_name}}
        export IMAGE_NAME=${{inputs.docker_image_name}}
        if [[ -z "${{ inputs.docker_image_tag }}" ]]; then
          export IMAGE_TAG=$(git rev-parse --short HEAD)
        else
          export IMAGE_TAG="${{ inputs.docker_image_tag }}"
        fi

        export IMAGE_FULL_PATH="$REPO_URL/$PROJECT_ID/$REPO_NAME/$IMAGE_NAME:$IMAGE_TAG"
        echo "Checking docker image $IMAGE_FULL_PATH"
        echo "IMAGE_FULL_PATH='${IMAGE_FULL_PATH}'"

        if gcloud container images describe $IMAGE_FULL_PATH >/dev/null 2>&1; then
          IMAGE_EXIST="true"
        else
          IMAGE_EXIST="false"
        fi
        echo "IMAGE_EXIST=$IMAGE_EXIST"

        # Export env variables
        echo "CURRENT_IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
        echo "IMAGE_EXIST=$IMAGE_EXIST" >> $GITHUB_ENV
        echo "IMAGE_PATH=$REPO_URL/$PROJECT_ID/$REPO_NAME/$IMAGE_NAME" >> $GITHUB_ENV
        echo "CURRENT_IMAGE=$IMAGE_FULL_PATH" >> $GITHUB_ENV

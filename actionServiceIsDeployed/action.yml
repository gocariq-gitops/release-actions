name: "Check if service is deployed"
description: "Check if service is already deployed"

inputs:
  app_name:
    description: "App name"
    required: true
  env_name:
    description: "Env name"
    required: true
  expected_git_tag:
    description: "Expected Git tag"
    required: true
  token:
    description: "GitHub token for git clone environments repository"
    required: true
  on_not_deployed_stop:
    description: "If it is TRUE - stop the pipeline"
    default: 'false'
    required: false

runs:
  using: "composite"
  steps:
    - name: Check out repository 'environments'
      uses: actions/checkout@master
      with:
        repository: gocariq/environments
        ref: main
        path: ./gocariq-environments
        token: ${{ inputs.token }}

    - name: "Check if service is deployed"
      shell: bash
      run: |
        set -x
        
        SERVICE_IS_DEPLOYED="false"
        ACTUAL_GIT_TAG=$(yq ".monochart.image.tag" ./gocariq-environments/environments/${{ inputs.env_name }}/apps/${{ inputs.app_name }}/values.yaml)
        if [[ "${{inputs.expected_git_tag}}" == "$ACTUAL_GIT_TAG" ]]; then
          SERVICE_IS_DEPLOYED="true"
        fi
        
        echo "SERVICE_IS_DEPLOYED=$SERVICE_IS_DEPLOYED" >> $GITHUB_ENV

        if [[ "${SERVICE_IS_DEPLOYED}" == "false" && "${{ inputs.on_not_deployed_stop }}" == 'true' ]]; then
          exit 1
        fi
